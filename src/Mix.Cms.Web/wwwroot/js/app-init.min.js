'use strict';
var app = angular.module('MixPortal',
    ['ngRoute', 'ngFileUpload', 'LocalStorageModule','components']);
    var modules = angular.module('components', []);
app.config(function ($routeProvider, $locationProvider, $sceProvider) {
    $locationProvider.html5Mode(true);

    $routeProvider.when("/init/login", {
        controller: "loginController",
        templateUrl: "/app/app-init/pages/login/login.html"
    });

    $routeProvider.when("/init", {
        controller: "Step1Controller",
        templateUrl: "/app/app-init/pages/step1/index.html"
    });

    $routeProvider.when("/init/step2", {
        controller: "Step2Controller",
        templateUrl: "/app/app-init/pages/step2/index.html"
    });

    $routeProvider.otherwise({ redirectTo: "/init" });
});

'use strict';
app.controller('loginController', [ '$rootScope', '$scope', 'ngAppSettings', '$location', 'AuthService', function ($rootScope, $scope, ngAppSettings, $location, authService) {
    if (authService.authentication && authService.authentication.isAuth && authService.authentication && authService.authentication.isAdmin) {
        authService.referredUrl = $location.path();
        $location.path('/portal');
    }

    $scope.pageClass = 'page-login';

    $scope.loginData = {
        username: "",
        password: "",
        rememberme: false
    };

    $scope.message = "";
    $scope.$on('$viewContentLoaded', function () {
        $rootScope.isBusy = false;
    });
    $scope.login = async function () {
        
        if (authService.referredUrl === "/init/login") {
            authService.referredUrl = "/portal";
        }
        var result = await authService.login($scope.loginData);
        if (result) {
            $rootScope.isBusy = false;
            $scope.message = result.errors[0];
            $scope.$apply();
        }
    };

$scope.authExternalProvider = function (provider) {

    var redirectUri = location.protocol + '//' + location.host + '/authcomplete.html';

    var externalProviderUrl = ngAuthSettings.apiServiceBaseUri + "api/Account/ExternalLogin?provider=" + provider
        + "&response_type=token&client_id=" + ngAuthSettings.clientId
        + "&redirect_uri=" + redirectUri;
    window.$windowScope = $scope;

    var oauthWindow = window.open(externalProviderUrl, "Authenticate Account", "location=0,status=0,width=600,height=750");
};

$scope.authCompletedCB = function (fragment) {

    $scope.$apply(function () {

        if (fragment.haslocalaccount === 'False') {

            authService.logOut();

            authService.externalAuthData = {
                provider: fragment.provider,
                userName: fragment.external_user_name,
                externalAccessToken: fragment.external_access_token
            };

            $location.path('/associate');

        }
        else {
            //Obtain access token and redirect to orders
            var externalData = { provider: fragment.provider, externalAccessToken: fragment.external_access_token };
            authService.obtainAccessToken(externalData).then(function (response) {

                $location.path('/orders');

            },
                function (err) {
                    $scope.message = err.error_description;
                });
        }

    });
}
}]);
'use strict';
app.controller('Step1Controller', ['$scope', '$rootScope', 'ngAppSettings', '$timeout', '$location', '$http',
    'CommonService', 'Step1Services',
    function ($scope, $rootScope, ngAppSettings, $timeout, $location, $http, commonService, step1Services) {
        var rand = Math.random();
        $scope.settings = {
            providers: [
                { text: 'Microsoft SQL Server', value: 'MSSQL', img: '/assets/img/mssql.jpg' },
                { text: 'MySQL Server', value: 'MySQL', img: '/assets/img/mysql.jpg' }
            ],
            cultures: angular.toJson($rootScope.loadFile('/data/cultures.json')),
            
        };
        $scope.loadSettings = function () {
            step1Services.saveDefaultSettings();
            $rootScope.isBusy = false;
        };
        $scope.dbProvider = $scope.settings.providers[0];
        $scope.initCmsModel = {
            isUseLocal: false,
            localDbConnectionString: '',
            sqliteDbConnectionString: '',
            localDbConnectionString: 'Server=(localdb)\\MSSQLLocalDB;Initial Catalog=' + rand + 'mix-cms.db;Integrated Security=True;Persist Security Info=False;Pooling=False;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=True',
            sqliteDbConnectionString: 'Data Source=' + rand + 'mix-cms.db',
            localDbName: rand + 'mix-cms.db',
            dataBaseServer: '',
            dataBaseName: '',
            dataBaseUser: '',
            dataBasePassword: '',
            adminPassword: '',
            lang: 'en-us',
            isMysql: false,
            databaseProvider: $scope.dbProvider.value,
            culture: $scope.settings.cultures[0]
        };
        
        $scope.updateLocalDbName = function () {
            $scope.initCmsModel.localDbConnectionString = 'Server=(localdb)\\mssqllocaldb;Database=' + $scope.initCmsModel.localDbName + ';Trusted_Connection=True;MultipleActiveResultSets=true';
            $scope.initCmsModel.sqliteDbConnectionString = 'Data Source=' + $scope.initCmsModel.localDbName;
        };
        $scope.initCms = async function () {
            $rootScope.isBusy = true;
            var result = await step1Services.initCms($scope.initCmsModel);
            if (result.isSucceed) {
                $rootScope.isBusy = false;
                window.location.href = '/init/step2';
            }
            else {
                if (result) { $rootScope.showErrors(result.errors); }
                $rootScope.isBusy = false;
                $scope.$apply();
            }
        }
    }]);
'use strict';
app.factory('Step1Services', ['$http', '$rootScope', 'AppSettings'
    , function ($http, $rootScope, appSettings) {

        //var serviceBase = 'http://ngauthenticationapi.azurewebsites.net/';

        var step1ServiceFactory = {};
        var apiUrl = '/portal/';
        var _saveDefaultSettings = async function () {
            var req = {
                method: 'GET',
                url: '/portal/app-settings/save-default'
            };
            return await _getApiResult(req);
        };
        var _initCms = async function (data) {
            var req = {
                method: 'POST',
                url: '/portal/init-cms',
                data: JSON.stringify(data)
            };
            return await _getApiResult(req);
        };
        var _getApiResult = async function (req) {
            $rootScope.isBusy = true;
            var serviceUrl = appSettings.serviceBase + '/api/' + appSettings.apiVersion;
            req.url = serviceUrl + req.url;
            req.headers = {
                'Content-Type': 'application/json'
            };
            return $http(req).then(function (resp) {
                return resp.data;
            },
                function (error) {
                    return { isSucceed: false, errors: [error.statusText || error.status] };
                });
        };
        step1ServiceFactory.initCms = _initCms;
        step1ServiceFactory.saveDefaultSettings = _saveDefaultSettings;
        return step1ServiceFactory;

    }]);

'use strict';
app.controller('Step2Controller', ['$scope', '$rootScope', 'ngAppSettings', '$timeout', '$location', '$http', 'CommonService', 'Step2Services', function ($scope, $rootScope, ngAppSettings, $timeout, $location, $http, commonService, services) {
    $scope.user = {
        userName: '',
        email: '',
        password: '',
        confirmPassword: '',
        isAgreed: false
    }
    $scope.register = async function () {
        if (!$scope.user.isAgreed) {
            $rootScope.showMessage('Please agreed with our policy', 'warning');
        } else {
            if ($scope.password !== $scope.confirmPassword) {
                $rootScope.showErrors(['Confirm Password is not matched']);
            } else {
                $rootScope.isBusy = true;
                var result = await services.register($scope.user);
                if (result.isSucceed) {
                    $rootScope.isBusy = false;
                    window.location.href = '/init/login';
                } else {
                    if (result) {
                        $rootScope.showErrors(result.errors);
                    }
                    $rootScope.isBusy = false;
                    $scope.$apply();
                }
            }
        }
    }
}]);
'use strict';
app.factory('Step2Services', ['$http', 'CommonService', function ($http, commonService) {

    //var serviceBase = 'http://ngauthenticationapi.azurewebsites.net/';

    var usersServiceFactory = {};
    var apiUrl = '/portal/';
    var _register = async function (user) {
        var apiUrl = '/account/register';
        var req = {
            method: 'POST',
            url: apiUrl,
            data: JSON.stringify(user)
        };

        return await commonService.getApiResult(req);
    };

    usersServiceFactory.register = _register;
    return usersServiceFactory;

}]);

modules.component('mssqlInfo', {
    templateUrl: '/app/app-init/pages/step1/components/mssql-info/view.html',
    controller: ['$rootScope',
        function ($rootScope) {
            var ctrl = this;
            
        }
    ],
    bindings: {
        initCmsModel: '='
    }
});
modules.component('mssqlLocalInfo', {
    templateUrl: '/app/app-init/pages/step1/components/mssql-local-info/view.html',
    controller: ['$rootScope',
        function ($rootScope) {
            var ctrl = this;
            
        }
    ],
    bindings: {
        initCmsModel: '='
    }
});
modules.component('mysqlInfo', {
    templateUrl: '/app/app-init/pages/step1/components/mysql-info/view.html',
    controller: ['$rootScope',
        function ($rootScope) {
            var ctrl = this;
        }
    ],
    bindings: {
        initCmsModel: '='
    }
});