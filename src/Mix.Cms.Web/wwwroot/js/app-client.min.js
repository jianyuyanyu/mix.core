'use strict';

var app = angular.module('MixClient', ['ngRoute', 'LocalStorageModule', 'components', 'ngSanitize']);
var serviceBase = '';

app.directive('ngEnter', function () {
    return function (scope, element, attrs) {
        element.bind("keydown keypress", function (event) {
            if (event.which === 13) {
                scope.$apply(function () {
                    scope.$eval(attrs.ngEnter);
                });

                event.preventDefault();
            }
        });
    };
}).directive('file', function () {
    return {
        scope: {
            file: '='
        },
        link: function (scope, el, attrs) {
            el.bind('change', function (event) {
                var files = event.target.files;
                var file = files[0];
                scope.file = file;
                scope.$apply();
            });
        }
    };
}).directive('imageonload', function () {
    return {
        restrict: 'A',
        link: function (scope, element, attrs) {
            element.bind('load', function () {
            });
            element.bind('error', function () {
            });
        }
    };
}).filter('utcToLocal', Filter);

function Filter($filter) {
    return function (utcDateString, format) {
        // return if input date is null or undefined
        if (!utcDateString) {
            return;
        }

        // append 'Z' to the date string to indicate UTC time if the timezone isn't already specified
        if (utcDateString.indexOf('Z') === -1 && utcDateString.indexOf('+') === -1) {
            utcDateString += 'Z';
        }

        // convert and format date using the built in angularjs date filter
        return $filter('date')(utcDateString, format);
    };
}

var modules = angular.module('components', []);

modules.component('fbLike', {
    templateUrl: '/app/app-client/components/fb-like/fb-like.html',
    controller: ['$location', function ($location) {
        var ctrl = this;
        ctrl.href = ctrl.href || window.top.location.href;        
        ctrl.layout = ctrl.layout || 'standard';        
        ctrl.size = ctrl.size || 'small';        
        ctrl.showFaces = ctrl.showFaces || true;    
        this.$onInit = function(){
            setTimeout(() => {
                FB.XFBML.parse();
            }, 200);
        }    
    }],
    bindings: {
        href:'=',
        layout:'=',
        size:'=',
        showFaces:'='
    }
});

modules.component('fbSend', {
    templateUrl: '/app/app-client/components/fb-send/fb-send.html',
    controller: ['$location', function ($location) {
        var ctrl = this;
        ctrl.href = ctrl.href || window.top.location.href;
        ctrl.send = function () {
            var link = ctrl.href || window.top.location.href;
            FB.ui({
                method: 'send',
                link: link,
            }, function (response) { });
        };
    }],
    bindings: {
        href:'=',
        appId:'='
    }
});

modules.component('fbShare', {
    templateUrl: '/app/app-client/components/fb-share/fb-share.html',
    controller: ['$location', function ($location) {
        var ctrl = this;
        ctrl.href = ctrl.href || window.top.location.href;
        ctrl.share = function () {
            var href = window.top.location.href;
            FB.ui({
                method: 'share',
                href: href,
            }, function (response) { });
        };
    }],
    bindings: {
        href:'='
    }
});