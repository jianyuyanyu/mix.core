// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mix.Database.Entities.Cms;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Mix.Database.Migrations.Cms.SqlServer
{
    [DbContext(typeof(SqlServerMixCmsContext))]
    [Migration("20250209091051_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppSettings")
                        .HasColumnType("ntext")
                        .HasColumnName("app_settings")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("BaseApiUrl")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("base_api_url")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("BaseHref")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("base_href")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("DeployUrl")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("deploy_url")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Domain")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("domain")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("image")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<string>("MixDatabaseName")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("mix_database_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int?>("MixDbId")
                        .HasColumnType("int")
                        .HasColumnName("mix_db_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.HasKey("Id")
                        .HasName("pk_mix_application");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_application", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("system_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_configuration");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_configuration", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixConfigurationContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("category")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("content")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("data_type")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DefaultContent")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("default_content")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("icon")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("is_public");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int?>("MixConfigurationId")
                        .HasColumnType("int")
                        .HasColumnName("mix_configuration_id");

                    b.Property<int>("MixCultureId")
                        .HasColumnType("int")
                        .HasColumnName("mix_culture_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Specificulture")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("specificulture")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("system_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_configuration_content");

                    b.HasIndex("MixConfigurationId");

                    b.HasIndex("MixCultureId");

                    b.ToTable("mix_configuration_content", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixContributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("content_type")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<Guid?>("GuidContentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid_content_id");

                    b.Property<int?>("IntContentId")
                        .HasColumnType("int")
                        .HasColumnName("int_content_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit")
                        .HasColumnName("is_owner");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("use_id");

                    b.HasKey("Id")
                        .HasName("pk_mix_contributor");

                    b.ToTable("mix_contributor", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixCulture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("alias")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("icon")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<string>("Lcid")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lcid")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Specificulture")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("specificulture")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_culture");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_culture", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatePermissions")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("create_permissions")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("DeletePermissions")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("delete_permissions")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int?>("MixDatabaseContextId")
                        .HasColumnType("int")
                        .HasColumnName("mix_database_context_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("ReadPermissions")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("read_permissions")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("SelfManaged")
                        .HasColumnType("bit")
                        .HasColumnName("self_managed");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("system_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("UpdatePermissions")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("update_permissions")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_database");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_database", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabaseAssociation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("ChildDatabaseName")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("child_database_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("child_id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<Guid?>("GuidChildId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid_child_id");

                    b.Property<Guid?>("GuidParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid_parent_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<string>("ParentDatabaseName")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("parent_database_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_database_association");

                    b.ToTable("mix_database_association", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabaseColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Configurations")
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("configurations");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("data_type")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("ntext")
                        .HasColumnName("default_value")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("MixDatabaseId")
                        .HasColumnType("int")
                        .HasColumnName("mix_database_id");

                    b.Property<string>("MixDatabaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("mix_database_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<int?>("ReferenceId")
                        .HasColumnType("int")
                        .HasColumnName("reference_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("system_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_database_column");

                    b.HasIndex("MixDatabaseId");

                    b.ToTable("mix_database_column", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabaseContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AesKey")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("aes_key")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("connection_string")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("DatabaseProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("database_provider")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<string>("NamingConvention")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("naming_convention")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Schema")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("schema")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("system_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_database_context");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_database_context", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabaseRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("child_id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("DestinateDatabaseName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("destinate_database_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("display_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("SourceDatabaseName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("source_database_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_database_relationship");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId");

                    b.ToTable("mix_database_relationship", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDiscussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnName("content")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("content_type")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<Guid?>("GuidContentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid_content_id");

                    b.Property<int?>("IntContentId")
                        .HasColumnType("int")
                        .HasColumnName("int_content_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("use_id");

                    b.HasKey("Id")
                        .HasName("pk_mix_discussion");

                    b.ToTable("mix_discussion", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("host")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_domain");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_domain", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("system_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_language");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_language", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixLanguageContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("category")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("content")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("data_type")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DefaultContent")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("default_content")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("icon")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("is_public");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("MixCultureId")
                        .HasColumnType("int")
                        .HasColumnName("mix_culture_id");

                    b.Property<int>("MixLanguageId")
                        .HasColumnType("int")
                        .HasColumnName("mix_language_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Specificulture")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("specificulture")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("system_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_language_content");

                    b.HasIndex("MixCultureId");

                    b.HasIndex("MixLanguageId");

                    b.ToTable("mix_language_content", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("extension")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("FileFolder")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("file_folder")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("file_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("FileProperties")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("file_properties")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("file_type")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("source")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("tags")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("TargetUrl")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("target_url")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_media");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_media", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("system_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_module");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_module", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModuleContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("class_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasColumnName("content")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("excerpt")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("icon")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("image")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("is_public");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int?>("LayoutId")
                        .HasColumnType("int")
                        .HasColumnName("layout_id");

                    b.Property<int>("MixCultureId")
                        .HasColumnType("int")
                        .HasColumnName("mix_culture_id");

                    b.Property<string>("MixDatabaseName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mix_database_name");

                    b.Property<int?>("MixDbId")
                        .HasColumnType("int")
                        .HasColumnName("mix_db_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int?>("PageSize")
                        .HasColumnType("int")
                        .HasColumnName("page_size");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<DateTime?>("PublishedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("published_date_time");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("seo_description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("seo_keywords")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoName")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("seo_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("seo_title")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SimpleDataColumns")
                        .HasColumnType("ntext")
                        .HasColumnName("simple_data_columns");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("source")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Specificulture")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("specificulture")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("system_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("title")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_module_content");

                    b.HasIndex("MixCultureId");

                    b.HasIndex("ParentId");

                    b.ToTable("mix_module_content", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModuleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasColumnName("content")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("excerpt")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("icon")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("image")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("is_public");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int?>("LayoutId")
                        .HasColumnType("int")
                        .HasColumnName("layout_id");

                    b.Property<int>("MixCultureId")
                        .HasColumnType("int")
                        .HasColumnName("mix_culture_id");

                    b.Property<int>("MixModuleContentId")
                        .HasColumnType("int")
                        .HasColumnName("mix_module_content_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<DateTime?>("PublishedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("published_date_time");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("seo_description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("seo_keywords")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoName")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("seo_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("seo_title")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SimpleDataColumns")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("simple_data_columns")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("source")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Specificulture")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("specificulture")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("title")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("value")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_module_data");

                    b.HasIndex("MixCultureId");

                    b.HasIndex("ParentId");

                    b.ToTable("mix_module_data", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModulePostAssociation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("child_id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int?>("MixModuleContentId")
                        .HasColumnType("int")
                        .HasColumnName("mix_module_content_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_module_post_association");

                    b.HasIndex("MixModuleContentId");

                    b.ToTable("mix_module_post_association", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_page");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_page", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPageContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("class_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasColumnName("content")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("excerpt")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("icon")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("image")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("is_public");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int?>("LayoutId")
                        .HasColumnType("int")
                        .HasColumnName("layout_id");

                    b.Property<int>("MixCultureId")
                        .HasColumnType("int")
                        .HasColumnName("mix_culture_id");

                    b.Property<string>("MixDatabaseName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mix_database_name");

                    b.Property<int?>("MixDbId")
                        .HasColumnType("int")
                        .HasColumnName("mix_db_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int?>("PageSize")
                        .HasColumnType("int")
                        .HasColumnName("page_size");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<DateTime?>("PublishedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("published_date_time");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("seo_description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("seo_keywords")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoName")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("seo_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("seo_title")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("source")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Specificulture")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("specificulture")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("title")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_page_content");

                    b.HasIndex("MixCultureId");

                    b.HasIndex("ParentId");

                    b.ToTable("mix_page_content", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPageModuleAssociation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("child_id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("MixPageContentId")
                        .HasColumnType("int")
                        .HasColumnName("mix_page_content_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_page_module_association");

                    b.ToTable("mix_page_module_association", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPagePostAssociation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("child_id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("MixPageContentId")
                        .HasColumnType("int")
                        .HasColumnName("mix_page_content_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_page_post_association");

                    b.ToTable("mix_page_post_association", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_post");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_post", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPostContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("class_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasColumnName("content")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("excerpt")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("icon")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("image")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("is_public");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int?>("LayoutId")
                        .HasColumnType("int")
                        .HasColumnName("layout_id");

                    b.Property<int>("MixCultureId")
                        .HasColumnType("int")
                        .HasColumnName("mix_culture_id");

                    b.Property<string>("MixDatabaseName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mix_database_name")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int?>("MixDbId")
                        .HasColumnType("int")
                        .HasColumnName("mix_db_id");

                    b.Property<int?>("MixPostContentId")
                        .HasColumnType("int")
                        .HasColumnName("mix_post_content_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<DateTime?>("PublishedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("published_date_time");

                    b.Property<string>("SeoDescription")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("seo_description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoKeywords")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("seo_keywords")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoName")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("seo_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("seo_title")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("source")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Specificulture")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("specificulture")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("title")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_post_content");

                    b.HasIndex("MixCultureId");

                    b.HasIndex("MixPostContentId");

                    b.HasIndex("ParentId");

                    b.ToTable("mix_post_content", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPostPostAssociation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildId")
                        .HasColumnType("int")
                        .HasColumnName("child_id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_post_post_association");

                    b.ToTable("mix_post_post_association", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("ntext")
                        .HasColumnName("content")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("extension")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("FileFolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("file_folder")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("file_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("FolderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("folder_type")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<int>("MixThemeId")
                        .HasColumnType("int")
                        .HasColumnName("mix_theme_id");

                    b.Property<string>("MixThemeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mix_theme_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Scripts")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnName("scripts")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Styles")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnName("styles")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_template");

                    b.HasIndex("MixThemeId");

                    b.ToTable("mix_template", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<string>("PrimaryDomain")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("primary_domain")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("system_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_tenant");

                    b.ToTable("mix_tenant", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetFolder")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("asset_folder")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("image_url")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<string>("MixDatabaseName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mix_database_name");

                    b.Property<int?>("MixDbId")
                        .HasColumnType("int")
                        .HasColumnName("mix_db_id");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<string>("PreviewUrl")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("preview_url")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("system_name");

                    b.Property<string>("TemplateFolder")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("template_folder")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.HasKey("Id")
                        .HasName("pk_mix_theme");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_theme", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixUrlAlias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("display_name")
                        .UseCollation("Vietnamese_CI_AS")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("modified_by");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<Guid?>("SourceContentGuidId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("source_content_guid_id");

                    b.Property<int?>("SourceContentId")
                        .HasColumnType("int")
                        .HasColumnName("source_content_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasAnnotation("MySql:CharSet", "utf8");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_mix_url_alias");

                    b.HasIndex("TenantId");

                    b.ToTable("mix_url_alias", (string)null);
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixApplication", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixConfiguration", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixConfigurationContent", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixConfiguration", "MixConfiguration")
                        .WithMany("MixConfigurationContents")
                        .HasForeignKey("MixConfigurationId");

                    b.HasOne("Mix.Database.Entities.Cms.MixCulture", "MixCulture")
                        .WithMany()
                        .HasForeignKey("MixCultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MixConfiguration");

                    b.Navigation("MixCulture");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixCulture", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabase", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany("MixDatabases")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabaseColumn", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixDatabase", "MixDatabase")
                        .WithMany("MixDatabaseColumns")
                        .HasForeignKey("MixDatabaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MixDatabase");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabaseContext", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabaseRelationship", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixDatabase", "DestinateDatabase")
                        .WithMany("DestinateRelationships")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Mix.Database.Entities.Cms.MixDatabase", "SourceDatabase")
                        .WithMany("SourceRelationships")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DestinateDatabase");

                    b.Navigation("SourceDatabase");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDomain", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixLanguage", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixLanguageContent", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixCulture", "MixCulture")
                        .WithMany()
                        .HasForeignKey("MixCultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mix.Database.Entities.Cms.MixLanguage", "MixLanguage")
                        .WithMany("MixLanguageContents")
                        .HasForeignKey("MixLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MixCulture");

                    b.Navigation("MixLanguage");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixMedia", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModule", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany("MixModules")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModuleContent", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixCulture", "MixCulture")
                        .WithMany()
                        .HasForeignKey("MixCultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mix.Database.Entities.Cms.MixModule", "MixModule")
                        .WithMany("MixModuleContents")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MixCulture");

                    b.Navigation("MixModule");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModuleData", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixCulture", "MixCulture")
                        .WithMany()
                        .HasForeignKey("MixCultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mix.Database.Entities.Cms.MixModuleContent", "MixModuleContent")
                        .WithMany("MixModuleDatas")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MixCulture");

                    b.Navigation("MixModuleContent");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModulePostAssociation", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixModuleContent", null)
                        .WithMany("MixPostContents")
                        .HasForeignKey("MixModuleContentId");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPage", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany("MixPages")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPageContent", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixCulture", "MixCulture")
                        .WithMany()
                        .HasForeignKey("MixCultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mix.Database.Entities.Cms.MixPage", "MixPage")
                        .WithMany("MixPageContents")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MixCulture");

                    b.Navigation("MixPage");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPost", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany("MixPosts")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPostContent", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixCulture", "MixCulture")
                        .WithMany()
                        .HasForeignKey("MixCultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mix.Database.Entities.Cms.MixPostContent", null)
                        .WithMany("MixPostContents")
                        .HasForeignKey("MixPostContentId");

                    b.HasOne("Mix.Database.Entities.Cms.MixPost", "MixPost")
                        .WithMany("MixPostContents")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MixCulture");

                    b.Navigation("MixPost");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixTemplate", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.MixTheme", "MixTheme")
                        .WithMany("MixViewTemplates")
                        .HasForeignKey("MixThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MixTheme");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixTheme", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixUrlAlias", b =>
                {
                    b.HasOne("Mix.Database.Entities.Cms.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixConfiguration", b =>
                {
                    b.Navigation("MixConfigurationContents");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixDatabase", b =>
                {
                    b.Navigation("DestinateRelationships");

                    b.Navigation("MixDatabaseColumns");

                    b.Navigation("SourceRelationships");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixLanguage", b =>
                {
                    b.Navigation("MixLanguageContents");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModule", b =>
                {
                    b.Navigation("MixModuleContents");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixModuleContent", b =>
                {
                    b.Navigation("MixModuleDatas");

                    b.Navigation("MixPostContents");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPage", b =>
                {
                    b.Navigation("MixPageContents");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPost", b =>
                {
                    b.Navigation("MixPostContents");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixPostContent", b =>
                {
                    b.Navigation("MixPostContents");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.Tenant", b =>
                {
                    b.Navigation("MixDatabases");

                    b.Navigation("MixModules");

                    b.Navigation("MixPages");

                    b.Navigation("MixPosts");
                });

            modelBuilder.Entity("Mix.Database.Entities.Cms.MixTheme", b =>
                {
                    b.Navigation("MixViewTemplates");
                });
#pragma warning restore 612, 618
        }
    }
}
