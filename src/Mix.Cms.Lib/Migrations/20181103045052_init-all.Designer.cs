// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mix.Cms.Lib.Models.Cms;

namespace Mix.Cms.Lib.Migrations
{
    [DbContext(typeof(MixCmsContext))]
    [Migration("20181103045052_init-all")]
    partial class initall
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixArticle", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Content");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Excerpt");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("ntext");

                    b.Property<string>("Icon");

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoName")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(4000);

                    b.Property<string>("SetAttributeData")
                        .HasColumnType("ntext");

                    b.Property<int?>("SetAttributeId");

                    b.Property<string>("Source")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tags")
                        .HasMaxLength(500);

                    b.Property<string>("Template")
                        .HasMaxLength(250);

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .HasMaxLength(4000);

                    b.Property<int>("Type");

                    b.Property<int?>("Views");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("SetAttributeId");

                    b.HasIndex("Specificulture");

                    b.ToTable("mix_article");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixArticleMedia", b =>
                {
                    b.Property<int>("MediaId");

                    b.Property<int>("ArticleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("MediaId", "ArticleId", "Specificulture");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("MediaId", "Specificulture");

                    b.ToTable("mix_article_media");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixArticleModule", b =>
                {
                    b.Property<int>("ModuleId");

                    b.Property<int>("ArticleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ModuleId", "ArticleId", "Specificulture");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.ToTable("mix_article_module");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCmsUser", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(450);

                    b.Property<string>("Avatar")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Username")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("mix_cms_user");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixComment", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int?>("ArticleId");

                    b.Property<string>("Content");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(250);

                    b.Property<string>("FullName")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsReviewed");

                    b.Property<bool?>("IsVisible");

                    b.Property<int?>("OrderId");

                    b.Property<int>("Priority");

                    b.Property<int?>("ProductId");

                    b.Property<double?>("Rating");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("OrderId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("mix_comment");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixConfiguration", b =>
                {
                    b.Property<string>("Keyword")
                        .HasMaxLength(250);

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Category")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DataType");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Value");

                    b.HasKey("Keyword", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.ToTable("mix_configuration");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCopy", b =>
                {
                    b.Property<string>("Culture")
                        .HasMaxLength(10);

                    b.Property<string>("Keyword")
                        .HasMaxLength(250);

                    b.Property<string>("Note")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Value");

                    b.HasKey("Culture", "Keyword");

                    b.ToTable("mix_copy");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCulture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(150);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("FullName")
                        .HasMaxLength(150);

                    b.Property<string>("Icon")
                        .HasMaxLength(50);

                    b.Property<string>("Lcid")
                        .HasColumnName("LCID")
                        .HasMaxLength(50);

                    b.Property<int>("Priority");

                    b.Property<string>("Specificulture")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("Specificulture")
                        .IsUnique()
                        .HasName("IX_Mix_Culture");

                    b.ToTable("mix_culture");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCustomer", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Address")
                        .HasMaxLength(450);

                    b.Property<string>("Avatar")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .HasMaxLength(250);

                    b.Property<bool>("IsAgreeNotified");

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UserId")
                        .HasMaxLength(256);

                    b.Property<string>("Username")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("mix_customer");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FileFolder")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FolderType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ThemeId");

                    b.Property<string>("ThemeName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ThemeId");

                    b.ToTable("mix_file");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixLanguage", b =>
                {
                    b.Property<string>("Keyword")
                        .HasMaxLength(250);

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Category")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DataType");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(250);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Value");

                    b.HasKey("Keyword", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.ToTable("mix_language");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixMedia", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FileFolder")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FileProperties")
                        .HasMaxLength(4000);

                    b.Property<long>("FileSize");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tags")
                        .HasMaxLength(400);

                    b.Property<string>("Title")
                        .HasMaxLength(4000);

                    b.HasKey("Id", "Specificulture");

                    b.ToTable("mix_media");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModule", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Fields")
                        .HasMaxLength(4000);

                    b.Property<string>("FormTemplate")
                        .HasMaxLength(4000);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PageSize");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Template")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .HasMaxLength(250);

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('0')");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.ToTable("mix_module");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleArticle", b =>
                {
                    b.Property<int>("ArticleId");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ArticleId", "ModuleId", "Specificulture");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.ToTable("mix_module_article");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleAttributeSet", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<int?>("ArticleId");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Fields")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Value");

                    b.HasKey("Id", "ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "ArticleId", "Specificulture");

                    b.HasIndex("ModuleId", "CategoryId", "Specificulture")
                        .HasName("IX_mix_module_attribute_set_ModuleId_PageId_Specificulture");

                    b.ToTable("mix_module_attribute_set");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleAttributeValue", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<Guid>("AttributeSetId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<int>("DataType");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(250);

                    b.Property<int>("Width");

                    b.HasKey("Id", "AttributeSetId", "Specificulture");

                    b.HasIndex("AttributeSetId", "ModuleId", "Specificulture");

                    b.ToTable("mix_module_attribute_value");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleData", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50);

                    b.Property<int>("ModuleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<int?>("ArticleId");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Fields")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<int>("Priority");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Value");

                    b.HasKey("Id", "ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "ArticleId", "Specificulture");

                    b.HasIndex("ModuleId", "CategoryId", "Specificulture")
                        .HasName("IX_mix_module_data_ModuleId_PageId_Specificulture");

                    b.HasIndex("ModuleId", "ProductId", "Specificulture");

                    b.ToTable("mix_module_data");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleProduct", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ProductId", "ModuleId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("mix_module_product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixOrder", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomerId");

                    b.Property<int>("Status");

                    b.Property<int>("StoreId");

                    b.Property<string>("UserId")
                        .HasMaxLength(50);

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Specificulture");

                    b.ToTable("mix_order");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixOrderItem", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("OrderId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<int>("Id");

                    b.Property<double>("Price");

                    b.Property<string>("PriceUnit")
                        .HasMaxLength(50);

                    b.Property<int>("Quantity");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ProductId", "OrderId", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.HasIndex("Id", "Specificulture")
                        .IsUnique()
                        .HasName("AK_mix_order_item_Id_Specificulture");

                    b.HasIndex("OrderId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("mix_order_item");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPage", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Content");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CssClass")
                        .HasMaxLength(50);

                    b.Property<string>("Excerpt");

                    b.Property<string>("Icon")
                        .HasMaxLength(50);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Layout")
                        .HasMaxLength(50);

                    b.Property<int?>("Level");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int?>("PageSize");

                    b.Property<int>("Priority");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoName")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(4000);

                    b.Property<string>("SetAttributeData")
                        .HasColumnType("ntext");

                    b.Property<int?>("SetAttributeId");

                    b.Property<string>("StaticUrl")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tags")
                        .HasMaxLength(500);

                    b.Property<string>("Template")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .HasMaxLength(4000);

                    b.Property<int>("Type");

                    b.Property<int?>("Views");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("SetAttributeId");

                    b.HasIndex("Specificulture");

                    b.ToTable("mix_page");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageArticle", b =>
                {
                    b.Property<int>("ArticleId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int?>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ArticleId", "CategoryId", "Specificulture");

                    b.HasIndex("ArticleId", "Specificulture");

                    b.HasIndex("CategoryId", "Specificulture")
                        .HasName("IX_mix_page_article_PageId_Specificulture");

                    b.ToTable("mix_page_article");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageModule", b =>
                {
                    b.Property<int>("ModuleId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ModuleId", "CategoryId", "Specificulture");

                    b.HasIndex("CategoryId", "Specificulture")
                        .HasName("IX_mix_page_module_PageId_Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.ToTable("mix_page_module");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPagePage", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("ParentId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id", "ParentId", "Specificulture");

                    b.HasIndex("Id", "Specificulture");

                    b.HasIndex("ParentId", "Specificulture");

                    b.ToTable("mix_page_page");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPagePosition", b =>
                {
                    b.Property<int>("PositionId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("PositionId", "CategoryId", "Specificulture");

                    b.HasIndex("CategoryId", "Specificulture")
                        .HasName("IX_mix_page_position_PageId_Specificulture");

                    b.ToTable("mix_page_position");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageProduct", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ProductId", "CategoryId", "Specificulture");

                    b.HasIndex("CategoryId", "Specificulture")
                        .HasName("IX_mix_page_product_PageId_Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("mix_page_product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixParameter", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("Description");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Name");

                    b.ToTable("mix_parameter");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPage", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(450);

                    b.Property<string>("Icon")
                        .HasMaxLength(50);

                    b.Property<int>("Level");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("TextDefault")
                        .HasMaxLength(250);

                    b.Property<string>("TextKeyword")
                        .HasMaxLength(250);

                    b.Property<string>("Url")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("mix_portal_page");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageNavigation", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("ParentId");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id", "ParentId");

                    b.HasIndex("ParentId");

                    b.ToTable("mix_portal_page_navigation");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPagePosition", b =>
                {
                    b.Property<int>("PositionId");

                    b.Property<int>("PortalPageId");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("PositionId", "PortalPageId");

                    b.HasIndex("PortalPageId");

                    b.ToTable("mix_portal_page_position");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageRole", b =>
                {
                    b.Property<string>("RoleId");

                    b.Property<int>("PageId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("RoleId", "PageId");

                    b.HasIndex("PageId");

                    b.ToTable("mix_portal_page_role");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("mix_position");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixProduct", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(N'')")
                        .HasMaxLength(50);

                    b.Property<string>("Content");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<double?>("DealPrice")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("Discount");

                    b.Property<string>("Excerpt");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("ntext");

                    b.Property<string>("Icon");

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<double>("ImportPrice");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Material")
                        .HasMaxLength(250);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<double>("NormalPrice");

                    b.Property<int>("PackageCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("Price");

                    b.Property<int>("Priority");

                    b.Property<string>("PrivacyId")
                        .HasMaxLength(10);

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoKeywords")
                        .HasMaxLength(4000);

                    b.Property<string>("SeoName")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(4000);

                    b.Property<string>("SetAttributeData")
                        .HasColumnType("ntext");

                    b.Property<int?>("SetAttributeId");

                    b.Property<string>("Source")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tags")
                        .HasMaxLength(500);

                    b.Property<string>("Template")
                        .HasMaxLength(250);

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .HasMaxLength(4000);

                    b.Property<int>("TotalSaled");

                    b.Property<int>("Type");

                    b.Property<string>("Unit")
                        .HasMaxLength(50);

                    b.Property<int?>("Views");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("SetAttributeId");

                    b.HasIndex("Specificulture");

                    b.ToTable("mix_product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixProductMedia", b =>
                {
                    b.Property<int>("MediaId");

                    b.Property<int>("ProductId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("MediaId", "ProductId", "Specificulture");

                    b.HasIndex("MediaId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("mix_product_media");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixProductModule", b =>
                {
                    b.Property<int>("ModuleId");

                    b.Property<int>("ProductId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<int>("Position");

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ModuleId", "ProductId", "Specificulture");

                    b.HasIndex("ModuleId", "Specificulture");

                    b.HasIndex("ProductId", "Specificulture");

                    b.ToTable("mix_product_module");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedArticle", b =>
                {
                    b.Property<int>("SourceId");

                    b.Property<int>("DestinationId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(450);

                    b.Property<string>("Image")
                        .HasMaxLength(450);

                    b.Property<int>("Priority");

                    b.Property<int>("Status");

                    b.HasKey("SourceId", "DestinationId", "Specificulture");

                    b.HasIndex("DestinationId", "Specificulture");

                    b.HasIndex("SourceId", "Specificulture");

                    b.ToTable("mix_related_article");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedProduct", b =>
                {
                    b.Property<int>("SourceId");

                    b.Property<int>("DestinationId");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(450);

                    b.Property<string>("Image")
                        .HasMaxLength(450);

                    b.Property<int>("Priority");

                    b.Property<int>("Status");

                    b.HasKey("SourceId", "DestinationId", "Specificulture");

                    b.HasIndex("DestinationId", "Specificulture");

                    b.HasIndex("SourceId", "Specificulture");

                    b.ToTable("mix_related_product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixSetAttribute", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(350);

                    b.Property<string>("Fields")
                        .IsRequired();

                    b.Property<int>("Priority");

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .HasMaxLength(50);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("mix_set_attribute");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FileFolder")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("FolderType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("MobileContent")
                        .HasColumnType("ntext");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250);

                    b.Property<int>("Priority");

                    b.Property<string>("Scripts")
                        .HasColumnType("ntext");

                    b.Property<string>("SpaContent")
                        .HasColumnType("ntext");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Styles")
                        .HasColumnType("ntext");

                    b.Property<int>("ThemeId");

                    b.Property<string>("ThemeName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ThemeId")
                        .HasName("IX_mix_template_file_TemplateId");

                    b.ToTable("mix_template");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("PreviewUrl")
                        .HasMaxLength(450);

                    b.Property<int>("Priority");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("mix_theme");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixUrlAlias", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Specificulture")
                        .HasMaxLength(10);

                    b.Property<string>("Alias")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<int>("Priority");

                    b.Property<string>("SourceId")
                        .HasMaxLength(250);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('0')");

                    b.HasKey("Id", "Specificulture");

                    b.HasIndex("Specificulture");

                    b.ToTable("mix_url_alias");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixArticle", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixSetAttribute", "SetAttribute")
                        .WithMany("MixArticle")
                        .HasForeignKey("SetAttributeId")
                        .HasConstraintName("FK_mix_article_mix_set_attribute");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation")
                        .WithMany("MixArticle")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Mix_Article_Mix_Culture")
                        .HasPrincipalKey("Specificulture");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixArticleMedia", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixArticle", "MixArticle")
                        .WithMany("MixArticleMedia")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_mix_article_media_mix_article");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixMedia", "MixMedia")
                        .WithMany("MixArticleMedia")
                        .HasForeignKey("MediaId", "Specificulture")
                        .HasConstraintName("FK_mix_article_media_mix_media");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixArticleModule", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixArticle", "MixArticle")
                        .WithMany("MixArticleModule")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Article_Module_Mix_Article");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule")
                        .WithMany("MixArticleModule")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Article_Module_Mix_Module1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixComment", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixArticle", "MixArticle")
                        .WithMany("MixComment")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_mix_comment_mix_article");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixOrder", "MixOrder")
                        .WithMany("MixComment")
                        .HasForeignKey("OrderId", "Specificulture")
                        .HasConstraintName("FK_mix_comment_mix_order");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixProduct", "MixProduct")
                        .WithMany("MixComment")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_mix_comment_mix_product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixConfiguration", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation")
                        .WithMany("MixConfiguration")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Mix_Configuration_Mix_Culture")
                        .HasPrincipalKey("Specificulture")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixFile", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixTheme", "Theme")
                        .WithMany("MixFile")
                        .HasForeignKey("ThemeId")
                        .HasConstraintName("FK_mix_file_mix_template");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixLanguage", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation")
                        .WithMany("MixLanguage")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Mix_Language_Mix_Culture")
                        .HasPrincipalKey("Specificulture")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModule", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation")
                        .WithMany("MixModule")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Mix_Module_Mix_Culture")
                        .HasPrincipalKey("Specificulture")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleArticle", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixArticle", "MixArticle")
                        .WithMany("MixModuleArticle")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Article_Mix_Article");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule")
                        .WithMany("MixModuleArticle")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Article_Mix_Module");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleAttributeSet", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule")
                        .WithMany("MixModuleAttributeSet")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Attribute_set_Mix_Module")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixArticleModule", "MixArticleModule")
                        .WithMany("MixModuleAttributeSet")
                        .HasForeignKey("ModuleId", "ArticleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Attribute_set_Mix_Article_Module");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPageModule", "MixPageModule")
                        .WithMany("MixModuleAttributeSet")
                        .HasForeignKey("ModuleId", "CategoryId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Attribute_set_Mix_Page_Module");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleAttributeValue", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixModuleAttributeSet", "MixModuleAttributeSet")
                        .WithMany("MixModuleAttributeValue")
                        .HasForeignKey("AttributeSetId", "ModuleId", "Specificulture")
                        .HasConstraintName("FK_mix_module_attribute_value_mix_module_attribute_set")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleData", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule")
                        .WithMany("MixModuleData")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Data_Mix_Module")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPageModule", "MixPageModule")
                        .WithMany("MixModuleData")
                        .HasForeignKey("ModuleId", "CategoryId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Data_Mix_Page_Module");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixArticleModule", "MixArticleModule")
                        .WithMany("MixModuleData")
                        .HasForeignKey("ModuleId", "ProductId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Data_Mix_Product_Module");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleProduct", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule")
                        .WithMany("MixModuleProduct")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Product_Mix_Module");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixProduct", "MixProduct")
                        .WithMany("MixModuleProduct")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_Mix_Module_Product_Mix_Product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixOrder", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixCustomer", "Customer")
                        .WithMany("MixOrder")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_mix_order_mix_cms_customer");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixOrderItem", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixOrder", "MixOrder")
                        .WithMany("MixOrderItem")
                        .HasForeignKey("OrderId", "Specificulture")
                        .HasConstraintName("FK_Order_Item_Order");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixProduct", "MixProduct")
                        .WithMany("MixOrderItem")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_Order_Item_Product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPage", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixSetAttribute", "SetAttribute")
                        .WithMany("MixPage")
                        .HasForeignKey("SetAttributeId")
                        .HasConstraintName("FK_mix_page_mix_set_attribute");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation")
                        .WithMany("MixPage")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Mix_Page_Mix_Culture")
                        .HasPrincipalKey("Specificulture");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageArticle", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixArticle", "MixArticle")
                        .WithMany("MixPageArticle")
                        .HasForeignKey("ArticleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Page_Article_Mix_Article");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage")
                        .WithMany("MixPageArticle")
                        .HasForeignKey("CategoryId", "Specificulture")
                        .HasConstraintName("FK_Mix_Page_Article_Mix_Page");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageModule", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage")
                        .WithMany("MixPageModule")
                        .HasForeignKey("CategoryId", "Specificulture")
                        .HasConstraintName("FK_Mix_Page_Module_Mix_Page");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule")
                        .WithMany("MixPageModule")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Menu_Module_Mix_Module1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPagePage", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage")
                        .WithMany("MixPagePageMixPage")
                        .HasForeignKey("Id", "Specificulture")
                        .HasConstraintName("FK_Mix_Page_Page_Mix_Page");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPageNavigation")
                        .WithMany("MixPagePageMixPageNavigation")
                        .HasForeignKey("ParentId", "Specificulture")
                        .HasConstraintName("FK_Mix_Page_Page_Mix_Page1");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPagePosition", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPosition", "Position")
                        .WithMany("MixPagePosition")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_Mix_Page_Position_Mix_Position")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage")
                        .WithMany("MixPagePosition")
                        .HasForeignKey("CategoryId", "Specificulture")
                        .HasConstraintName("FK_Mix_Page_Position_Mix_Page");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageProduct", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage")
                        .WithMany("MixPageProduct")
                        .HasForeignKey("CategoryId", "Specificulture")
                        .HasConstraintName("FK_Mix_Page_Product_Mix_Page");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixProduct", "MixProduct")
                        .WithMany("MixPageProduct")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_Mix_Page_Product_Mix_Product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageNavigation", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "IdNavigation")
                        .WithMany("MixPortalPageNavigationIdNavigation")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK_mix_portal_page_navigation_mix_portal_page");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "Parent")
                        .WithMany("MixPortalPageNavigationParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_mix_portal_page_navigation_mix_portal_page1");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPagePosition", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "PortalPage")
                        .WithMany("MixPortalPagePosition")
                        .HasForeignKey("PortalPageId")
                        .HasConstraintName("FK_Mix_PortalPage_Position_Mix_PortalPage");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPosition", "Position")
                        .WithMany("MixPortalPagePosition")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_Mix_PortalPage_Position_Mix_Position")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageRole", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "Page")
                        .WithMany("MixPortalPageRole")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_mix_portal_page_role_mix_portal_page")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixProduct", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixSetAttribute", "SetAttribute")
                        .WithMany("MixProduct")
                        .HasForeignKey("SetAttributeId")
                        .HasConstraintName("FK_mix_product_mix_set_attribute");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation")
                        .WithMany("MixProduct")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Mix_Product_Mix_Culture")
                        .HasPrincipalKey("Specificulture");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixProductMedia", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixMedia", "MixMedia")
                        .WithMany("MixProductMedia")
                        .HasForeignKey("MediaId", "Specificulture")
                        .HasConstraintName("FK_mix_product_media_mix_media");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixProduct", "MixProduct")
                        .WithMany("MixProductMedia")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_mix_product_media_mix_product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixProductModule", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule")
                        .WithMany("MixProductModule")
                        .HasForeignKey("ModuleId", "Specificulture")
                        .HasConstraintName("FK_Mix_Product_Module_Mix_Module1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixProduct", "MixProduct")
                        .WithMany("MixProductModule")
                        .HasForeignKey("ProductId", "Specificulture")
                        .HasConstraintName("FK_Mix_Product_Module_Mix_Product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedArticle", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixArticle", "MixArticle")
                        .WithMany("MixRelatedArticleMixArticle")
                        .HasForeignKey("DestinationId", "Specificulture")
                        .HasConstraintName("FK_mix_related_article_mix_article1");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixArticle", "S")
                        .WithMany("MixRelatedArticleS")
                        .HasForeignKey("SourceId", "Specificulture")
                        .HasConstraintName("FK_mix_related_article_mix_article");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedProduct", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixProduct", "MixProduct")
                        .WithMany("MixRelatedProductMixProduct")
                        .HasForeignKey("DestinationId", "Specificulture")
                        .HasConstraintName("FK_mix_related_product_mix_product1");

                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixProduct", "S")
                        .WithMany("MixRelatedProductS")
                        .HasForeignKey("SourceId", "Specificulture")
                        .HasConstraintName("FK_mix_related_product_mix_product");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixTemplate", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixTheme", "Theme")
                        .WithMany("MixTemplate")
                        .HasForeignKey("ThemeId")
                        .HasConstraintName("FK_mix_template_mix_theme");
                });

            modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixUrlAlias", b =>
                {
                    b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation")
                        .WithMany("MixUrlAlias")
                        .HasForeignKey("Specificulture")
                        .HasConstraintName("FK_Mix_Url_Alias_Mix_Culture")
                        .HasPrincipalKey("Specificulture")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
