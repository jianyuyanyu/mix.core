import { Injectable } from '@angular/core';
import { MixApiDict } from '@mix-spa/mix.lib';
import { tap } from 'rxjs';
import { BaseApiService } from '../../bases/base-api.service';
import { AppEvent } from '../helper/app-event.service';
import * as i0 from "@angular/core";
export class MixPostApiService extends BaseApiService {
    getDefaultPostTemplate() {
        return this.get(MixApiDict.PostApi.getDefaultPostEndpoint);
    }
    savePost(data) {
        return this.post(MixApiDict.PostApi.savePostEndpoint, data).pipe(tap(() => this.appEvent.notify(AppEvent.NewPostAdded)));
    }
    getPosts(request) {
        return this.get(MixApiDict.PostApi.getPostEndpoint, request);
    }
    deletePosts(id) {
        return this.delete(MixApiDict.PostApi.deletePostEndpoint + id);
    }
}
MixPostApiService.ɵfac = /*@__PURE__*/ function () { let ɵMixPostApiService_BaseFactory; return function MixPostApiService_Factory(t) { return (ɵMixPostApiService_BaseFactory || (ɵMixPostApiService_BaseFactory = i0.ɵɵgetInheritedFactory(MixPostApiService)))(t || MixPostApiService); }; }();
MixPostApiService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: MixPostApiService, factory: MixPostApiService.ɵfac, providedIn: 'root' });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(MixPostApiService, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4LXBvc3QtYXBpLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9taXgucG9ydGFsLmFuZ3VsYXIvbGlicy9taXguc2hhcmUvc3JjL3NlcnZpY2VzL2FwaS9taXgtcG9zdC1hcGkuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFDTCxVQUFVLEVBSVgsTUFBTSxrQkFBa0IsQ0FBQztBQUMxQixPQUFPLEVBQWMsR0FBRyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXZDLE9BQU8sRUFBRSxjQUFjLEVBQW9CLE1BQU0sOEJBQThCLENBQUM7QUFDaEYsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDZCQUE2QixDQUFDOztBQUd2RCxNQUFNLE9BQU8saUJBQWtCLFNBQVEsY0FBYztJQUM1QyxzQkFBc0I7UUFDM0IsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBRU0sUUFBUSxDQUFDLElBQXdCO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FDZCxVQUFVLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUNuQyxJQUFJLENBQ0wsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUVNLFFBQVEsQ0FDYixPQUErQjtRQUUvQixPQUFPLElBQUksQ0FBQyxHQUFHLENBQ2IsVUFBVSxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQ2hCLE9BQU8sQ0FDMUIsQ0FBQztJQUNKLENBQUM7SUFFTSxXQUFXLENBQUMsRUFBVTtRQUMzQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUNqRSxDQUFDOzs2T0F2QlUsaUJBQWlCLFNBQWpCLGlCQUFpQjt1RUFBakIsaUJBQWlCLFdBQWpCLGlCQUFpQixtQkFESixNQUFNO3VGQUNuQixpQkFBaUI7Y0FEN0IsVUFBVTtlQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICBNaXhBcGlEaWN0LFxyXG4gIE1peFBvc3RQb3J0YWxNb2RlbCxcclxuICBQYWdpbmF0aW9uUmVxdWVzdE1vZGVsLFxyXG4gIFBhZ2luYXRpb25SZXN1bHRNb2RlbFxyXG59IGZyb20gJ0BtaXgtc3BhL21peC5saWInO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCB0YXAgfSBmcm9tICdyeGpzJztcclxuXHJcbmltcG9ydCB7IEJhc2VBcGlTZXJ2aWNlLCBJSHR0cFBhcmFtT2JqZWN0IH0gZnJvbSAnLi4vLi4vYmFzZXMvYmFzZS1hcGkuc2VydmljZSc7XHJcbmltcG9ydCB7IEFwcEV2ZW50IH0gZnJvbSAnLi4vaGVscGVyL2FwcC1ldmVudC5zZXJ2aWNlJztcclxuXHJcbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXHJcbmV4cG9ydCBjbGFzcyBNaXhQb3N0QXBpU2VydmljZSBleHRlbmRzIEJhc2VBcGlTZXJ2aWNlIHtcclxuICBwdWJsaWMgZ2V0RGVmYXVsdFBvc3RUZW1wbGF0ZSgpOiBPYnNlcnZhYmxlPE1peFBvc3RQb3J0YWxNb2RlbD4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZ2V0KE1peEFwaURpY3QuUG9zdEFwaS5nZXREZWZhdWx0UG9zdEVuZHBvaW50KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzYXZlUG9zdChkYXRhOiBNaXhQb3N0UG9ydGFsTW9kZWwpOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybiB0aGlzLnBvc3Q8TWl4UG9zdFBvcnRhbE1vZGVsLCB2b2lkPihcclxuICAgICAgTWl4QXBpRGljdC5Qb3N0QXBpLnNhdmVQb3N0RW5kcG9pbnQsXHJcbiAgICAgIGRhdGFcclxuICAgICkucGlwZSh0YXAoKCkgPT4gdGhpcy5hcHBFdmVudC5ub3RpZnkoQXBwRXZlbnQuTmV3UG9zdEFkZGVkKSkpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldFBvc3RzKFxyXG4gICAgcmVxdWVzdDogUGFnaW5hdGlvblJlcXVlc3RNb2RlbFxyXG4gICk6IE9ic2VydmFibGU8UGFnaW5hdGlvblJlc3VsdE1vZGVsPE1peFBvc3RQb3J0YWxNb2RlbD4+IHtcclxuICAgIHJldHVybiB0aGlzLmdldDxQYWdpbmF0aW9uUmVzdWx0TW9kZWw8TWl4UG9zdFBvcnRhbE1vZGVsPj4oXHJcbiAgICAgIE1peEFwaURpY3QuUG9zdEFwaS5nZXRQb3N0RW5kcG9pbnQsXHJcbiAgICAgIDxJSHR0cFBhcmFtT2JqZWN0PnJlcXVlc3RcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZGVsZXRlUG9zdHMoaWQ6IG51bWJlcik6IE9ic2VydmFibGU8dm9pZD4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZGVsZXRlKE1peEFwaURpY3QuUG9zdEFwaS5kZWxldGVQb3N0RW5kcG9pbnQgKyBpZCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==